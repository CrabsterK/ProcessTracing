@model ProcessTracing.Models.TestModel

<script src="~/Scripts/Chart.js"></script>
<script>
    function random_rgba() {
        var o = Math.round, r = Math.random, s = 255;
        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
    }
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }
</script>
<div id="charts" class="siteContent chartsPage">


    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Wybierz tablicę
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @{
                int counter = 0;
                foreach (var item in Model.listOfBoards)
                {
            <a class="dropdown-item" id="@counter" href="/Test/Index?boardIndex=@counter&projectInd=@Request.Params["projectInd"]">@item.Value</a>
                    counter = counter + 1;
                }
            }
        </div>
    </div>


    <div class="row">
        <div class="col-sm">
            <div class="product_price">
                <span class="price-tax"><b>Puste listy</b></span>
                <br>
                <ul>
                    @if (Model.emptyLists.Count == 0)
                    {
                        <p>Brak pustych list</p>
                    }
                    else
                    {
                        foreach (var item in Model.emptyLists)
                        {
                            <li>@item</li>
                        }
                    }

                </ul>

            </div>
        </div>
        <div class="col-sm">
            <div class="product_price">
                <span class="price-tax"><b>Listy z Twojej tablicy</b></span>
                <br />
                <ul>
                    @foreach (var item in Model.listOfCards)
                    {
                        <li>@item</li>
                    }
                </ul>
            </div>
        </div>

        <div class="col-sm">
            <div class="product_price">
                <span class="price-tax"><b>Ilość użytkowników przypisanych do tablicy</b></span>
                <br>
                <h1 class="price">@Model.boardMembertsQty</h1>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <canvas id="pieChart"></canvas>
            <script>
                new Chart(document.getElementById("pieChart"), {
                    type: 'pie',
                    data: {
                        labels: [@foreach (var item in Model.listsCardsQty){<text>"</text>@item.ListName<text>",</text>}],
                        datasets: [{
                            label: "Ilość kart",
                            backgroundColor: [random_rgba(), random_rgba(), random_rgba(), random_rgba(), random_rgba()],
                            data: [@foreach (var item in Model.listsCardsQty){<text>"</text>@item.CardQuantity<text>",</text>}]
                        }]
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'Ilość kart przypisanych do danej listy'
                        }
                    }
                });
            </script>
        </div>
    </div>
    <div class="row">
        <div class="col-sm">
            <div class="product_price">
                <span class="price-tax"><b>Lista z największą ilością kart </b></span>
                <br>
                <h1 class="price">@Model.mostCardsListName - @Model.mostCardsListQty</h1>
            </div>
        </div>
        @*
        <div class="col-sm">
            <div class="product_price">
                <span class="price-tax">Data i czas stworzenia listy <b>@Model.listCreateName</b></span>
                <br>
                <h1 class="price">@Model.listCreateDate</h1>

            </div>
        </div>
        *@
        @*@
            <div class="col-sm">
                <div class="product_price">
                    <span class="price-tax">Tygodnie</span>
                    <br>
                    @foreach (var item in Model.tyg)
                    {
                        @item<text><br /></text>
                    }

                </div>
            </div>
        *@
    </div>

    <div class="row">
        <div class="col-sm">
            <canvas id="pieChart2"></canvas>
            <script>
                new Chart(document.getElementById("pieChart2"), {
                    type: 'polarArea',
                    data: {
                        labels: [@foreach (var item in Model.amountOfCardsActions){<text>"</text>@item.Key<text>",</text>}],
                        datasets: [{
                            label: "Ilość akcji",
                            backgroundColor: [random_rgba(), random_rgba(), random_rgba(), random_rgba(), random_rgba()],
                            data: [@foreach (var item in Model.amountOfCardsActions){<text>"</text>@item.Value<text>",</text>}]
                        }]
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'Ilość akcji na kartach pogrupowane według użytkowników'
                        }
                    }
                });
            </script>
        </div>
    </div>

    <div class="row">
        <div class="col-sm">
            <div class="product_price">
                <canvas id="bar-chart-grouped" width="800" height="450"></canvas>
                <script>
                    new Chart(document.getElementById("bar-chart-grouped"), {
                        type: 'bar',
                        data: {
                          labels: [@foreach(var week in @Model.sortedWeeks) { <text>"</text>@week<text>",</text>}],
                          datasets: [
	                    @foreach (var item in Model.listOfAmountOfActionsByTime) { <text>{ label: "</text> @item.member <text>", backgroundColor: getRandomColor(),data: [</text> foreach (var amountOfWeek in item.amountOfActions) {@amountOfWeek<text>,</text>}<text>]},</text>}
                          ]
                        },
                        options: {
                          title: {
                            display: true,
                            text: 'Ilość akcji wykonanych przez każdego z użytkowników w czasie'
                            },
                            scales: {
                                xAxes: [{ //linie x
                                    gridLines: {
                                        zeroLineWidth: 1, //linia x=0
                                        zeroLineColor: 'rgba(0,0,0,0.3)', //kolor lini x=0
                                        color: "rgba(0, 0, 0, 0.05)", //kolor linii
                                        lineWidth: 1 //szerokośc linii
                                    },
                                    display: true, //czy pokazywac dolne opisy jednostek
                                    scaleLabel: { //tytuł osi x
                                        display: true,
                                        labelString: 'Numer tygodnia',
                                        fontSize: 12,
                                        fontStyle: 'bold'
                                    },
                                }],
                                yAxes: [{ //linie y
                                    gridLines: {
                                        zeroLineWidth: 1,
                                        zeroLineColor: 'rgba(0,0,0,0.3)',
                                        color: "rgba(0, 0, 0, 0.05)",
                                        lineWidth: 1
                                    },
                                    display: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Ilość akcji wykonanych na kartach',
                                        fontSize: 13,
                                        fontStyle: 'bold'
                                    }
                                }]
                            }
                        }
                    });
                    
                </script>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm">
            <div class="product_price">
                <canvas id="radar-chart" width="800" height="450"></canvas>
                <script>
                    new Chart(document.getElementById("radar-chart").getContext("2d"), {
                        type: 'radar',
                        data: {
                          labels: [@foreach(var week in @Model.sortedWeeks) { <text>"</text>@week<text>",</text>}],
                          datasets: [
	                    @foreach (var item in Model.listOfCreatedCardsByTime) {
                            <text>{
                                  label: "</text> @item.member <text>",
                                  backgroundColor: random_rgba(),
                                  pointBorderColor: random_rgba(),
                                  borderWidth: 2,
                                  backgroundColor: random_rgba(),
                                  pointRadius: 4,
                                  pointHoverBorderWidth: 3,
                                  pointHoverBackgroundColor: random_rgba(),
                                  pointHoverBorderColor: random_rgba(),
                                  data: [</text> foreach (var amountOfWeek in item.amountOfActions) {@amountOfWeek<text>,</text>}<text>]
                              },</text>}
                          ]
                        },
                        options: {
                          title: {
                            display: true,
                            text: 'Ilość kart, które użytkownik utworzył w czasie (tygodnie)'
                            },
                            scales: {
                                xAxes: [{ //linie x
                                    gridLines: {
                                        zeroLineWidth: 1, //linia x=0
                                        zeroLineColor: 'rgba(0,0,0,0.3)', //kolor lini x=0
                                        color: "rgba(0, 0, 0, 0.05)", //kolor linii
                                        lineWidth: 1 //szerokośc linii
                                    },
                                    display: false, //czy pokazywac dolne opisy jednostek
                                    scaleLabel: { //tytuł osi x
                                        display: true,
                                        labelString: 'Numer tygodnia',
                                        fontSize: 12,
                                        fontStyle: 'bold'
                                    },
                                }],
                                yAxes: [{ //linie y
                                    gridLines: {
                                        zeroLineWidth: 1,
                                        zeroLineColor: 'rgba(0,0,0,0.3)',
                                        color: "rgba(0, 0, 0, 0.05)",
                                        lineWidth: 1
                                    },
                                    display: false,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Ilość stworzonych kart',
                                        fontSize: 13,
                                        fontStyle: 'bold'
                                    }
                                }]
                            }
                        }
                    });
                    function random_rgba() {
                        var o = Math.round, r = Math.random, s = 255;
                        return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + r().toFixed(1) + ')';
                    }
                </script>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-sm">
            <div class="product_price">
                <canvas id="horizontal-chart" width="800" height="450"></canvas>
                <script>
                    new Chart(document.getElementById("horizontal-chart").getContext("2d"), {
                        type: 'horizontalBar',
                        data: {
                          labels: [@foreach(var week in @Model.sortedWeeks) { <text>"</text>@week<text>",</text>}],
                          datasets: [
	                    @foreach (var item in Model.listOfAmountOfAddInTime) {
                            <text>{
                                  label: "</text> @item.member <text>",
                                  backgroundColor: random_rgba(),
                                  pointBorderColor: random_rgba(),
                                  borderWidth: 2,
                                  backgroundColor: random_rgba(),
                                  pointRadius: 4,
                                  pointHoverBorderWidth: 3,
                                  pointHoverBackgroundColor: random_rgba(),
                                  pointHoverBorderColor: random_rgba(),
                                  data: [</text> foreach (var amountOfWeek in item.amountOfActions) {@amountOfWeek<text>,</text>}<text>]
                              },</text>}
                          ]
                        },
                        options: {
                          title: {
                            display: true,
                            text: 'Ilość akcji dodania danego użytkownika do kart'
                            },
                            scales: {
                                xAxes: [{ //linie x
                                    gridLines: {
                                        zeroLineWidth: 1, //linia x=0
                                        zeroLineColor: 'rgba(0,0,0,0.3)', //kolor lini x=0
                                        color: "rgba(0, 0, 0, 0.05)", //kolor linii
                                        lineWidth: 1 //szerokośc linii
                                    },
                                    display: true, //czy pokazywac dolne opisy jednostek
                                    scaleLabel: { //tytuł osi x
                                        display: true,
                                        labelString: 'Ilość kart, do których użytkownik został przypisany',
                                        fontSize: 12,
                                        fontStyle: 'bold'
                                    },
                                }],
                                yAxes: [{ //linie y
                                    gridLines: {
                                        zeroLineWidth: 1,
                                        zeroLineColor: 'rgba(0,0,0,0.3)',
                                        color: "rgba(0, 0, 0, 0.05)",
                                        lineWidth: 1
                                    },
                                    display: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Numer tygodnia',
                                        fontSize: 13,
                                        fontStyle: 'bold'
                                    }
                                }]
                            }
                        }
                    });
                    
                </script>
            </div>
        </div>
    </div>
</div>
